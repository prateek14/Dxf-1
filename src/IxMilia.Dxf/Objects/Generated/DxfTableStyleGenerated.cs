// Copyright (c) IxMilia.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

// The contents of this file are automatically generated by a tool, and should not be directly modified.

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using IxMilia.Dxf.Collections;
using IxMilia.Dxf.Entities;

namespace IxMilia.Dxf.Objects
{
    /// <summary>
    /// DxfTableStyle class
    /// </summary>
    public partial class DxfTableStyle : DxfObject
    {
        public override DxfObjectType ObjectType { get { return DxfObjectType.TableStyle; } }
        protected override DxfAcadVersion MinVersion { get { return DxfAcadVersion.R2004; } }
        public DxfVersion Version { get; set; }
        public string Description { get; set; }
        public DxfFlowDirection FlowDirection { get; set; }
        public int Flags { get; set; }
        public double HorizontalCellMargin { get; set; }
        public double VerticalCellMargin { get; set; }
        public bool IsTitleSuppressed { get; set; }
        public bool IsColumnHeadingSuppressed { get; set; }
        public IList<DxfTableCellStyle> CellStyles { get; private set; }

        public DxfTableStyle()
            : base()
        {
        }

        protected override void Initialize()
        {
            base.Initialize();
            this.Version = DxfVersion.R2010;
            this.Description = null;
            this.FlowDirection = DxfFlowDirection.Down;
            this.Flags = 0;
            this.HorizontalCellMargin = 0.06;
            this.VerticalCellMargin = 0.06;
            this.IsTitleSuppressed = false;
            this.IsColumnHeadingSuppressed = false;
            this.CellStyles = new ListNonNull<DxfTableCellStyle>();
        }

        protected override void AddValuePairs(List<DxfCodePair> pairs, DxfAcadVersion version, bool outputHandles)
        {
            base.AddValuePairs(pairs, version, outputHandles);
            pairs.Add(new DxfCodePair(100, "AcDbTableStyle"));
            if (version >= DxfAcadVersion.R2010)
            {
                pairs.Add(new DxfCodePair(280, (short)(this.Version)));
            }

            pairs.Add(new DxfCodePair(3, (this.Description)));
            pairs.Add(new DxfCodePair(70, (short)(this.FlowDirection)));
            pairs.Add(new DxfCodePair(71, (short)(this.Flags)));
            pairs.Add(new DxfCodePair(40, (this.HorizontalCellMargin)));
            pairs.Add(new DxfCodePair(41, (this.VerticalCellMargin)));
            pairs.Add(new DxfCodePair(280, BoolShort(this.IsTitleSuppressed)));
            pairs.Add(new DxfCodePair(281, BoolShort(this.IsColumnHeadingSuppressed)));
            foreach (var item in CellStyles)
            {
                pairs.Add(new DxfCodePair(7, item.Name));
                pairs.Add(new DxfCodePair(140, item.TextHeight));
                pairs.Add(new DxfCodePair(170, item.CellAlignment));
                pairs.Add(new DxfCodePair(62, item.TextColor?.RawValue ?? 0));
                pairs.Add(new DxfCodePair(63, item.CellFillColor?.RawValue ?? 7));
                pairs.Add(new DxfCodePair(283, BoolShort(item.IsBackgroundColorEnabled)));
                pairs.Add(new DxfCodePair(90, item.CellDataType));
                pairs.Add(new DxfCodePair(91, item.CellUnitType));
                pairs.Add(new DxfCodePair(274, item.BorderLineweight1));
                pairs.Add(new DxfCodePair(275, item.BorderLineweight2));
                pairs.Add(new DxfCodePair(276, item.BorderLineweight3));
                pairs.Add(new DxfCodePair(277, item.BorderLineweight4));
                pairs.Add(new DxfCodePair(278, item.BorderLineweight5));
                pairs.Add(new DxfCodePair(279, item.BorderLineweight6));
                pairs.Add(new DxfCodePair(284, BoolShort(item.IsBorder1Visible)));
                pairs.Add(new DxfCodePair(285, BoolShort(item.IsBorder2Visible)));
                pairs.Add(new DxfCodePair(286, BoolShort(item.IsBorder3Visible)));
                pairs.Add(new DxfCodePair(287, BoolShort(item.IsBorder4Visible)));
                pairs.Add(new DxfCodePair(288, BoolShort(item.IsBorder5Visible)));
                pairs.Add(new DxfCodePair(289, BoolShort(item.IsBorder6Visible)));
                pairs.Add(new DxfCodePair(64, item.Border1Color?.RawValue ?? 0));
                pairs.Add(new DxfCodePair(65, item.Border2Color?.RawValue ?? 0));
                pairs.Add(new DxfCodePair(66, item.Border3Color?.RawValue ?? 0));
                pairs.Add(new DxfCodePair(67, item.Border4Color?.RawValue ?? 0));
                pairs.Add(new DxfCodePair(68, item.Border5Color?.RawValue ?? 0));
                pairs.Add(new DxfCodePair(69, item.Border6Color?.RawValue ?? 0));
            }

        }
    }
}
